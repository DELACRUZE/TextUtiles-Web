{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/about.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mood","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","darkMood","style","height","width","dt","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","rows","value","onChange","event","target","newText","toUpperCase","toLowerCase","heading2","split","filter","element","length","heading3","About","mystyle","grey","aria-labelledby","data-bs-parent","prototype","PropTypes","string","aboutText","App","setmood","_useState3","_useState4","setdt","_useState5","_useState6","bwText","setbwText","_useState7","color","backgroundColor","border","_useState8","btncolor","setbtncolor","_useState9","background","_useState10","setMyStyle","_useState11","_useState12","setgrey","cls","document","body","classList","remove","add","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a4dd9aaf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useState } from \"react\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-${props.mood} navbar-expand-lg bg-${props.mood}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item \">\r\n              <Link className=\"nav-link HomeLink \" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link AboutLink \" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"d-flex\">\r\n            <div className=\"bg-primary rounded-2 mx-2\" onClick={() => props.darkMood(\"primary\")} style={{ height: \"30px\", width: \"30px\" }}></div>\r\n            <div className=\"bg-warning rounded-2 mx-2\" onClick={() => props.darkMood(\"warning\")} style={{ height: \"30px\", width: \"30px\" }}></div>\r\n            <div className=\"bg-danger rounded-2 mx-2\" onClick={() => props.darkMood(\"danger\")} style={{ height: \"30px\", width: \"30px\" }}></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"form-check form-switch mx-1\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            onClick={() => props.darkMood(null)}\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label className={`form-check-label text-${props.dt}`} htmlFor=\"flexSwitchCheckDefault\">\r\n            Dark mood\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.prototype = { title: PropTypes.string, aboutText: PropTypes.string };","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"Enter Text Here\");\r\n\r\n  const handleupclick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleupclick2 = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleupclick3 = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleonchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className=\"my-1\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={text}\r\n            onChange={handleonchange}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"buttonbox\">\r\n\r\n          <button className=\"btn btn-danger my-1 mx-1\" onClick={handleupclick}>\r\n            Converd Uppercase\r\n          </button>\r\n          <button className=\"btn btn-danger mx-1 my-1\" onClick={handleupclick2}>\r\n            Converd lowercase\r\n          </button>\r\n          <button className=\"btn btn-danger  my-1 mx-1\" onClick={handleupclick3}>\r\n            Clear text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-5\">\r\n        <h1>{props.heading2}</h1>\r\n        <p>\r\n          {text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Words and {text.length} characters\r\n        </p>\r\n\r\n        <p>{0.008 * text.split(\" \").length} Minuts TO READ</p>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <h1>{props.heading3}</h1>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {  } from \"react\";\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <div style={props.mystyle} className=\"p-4 rounded-2 bigC \">\r\n      <h1 className=\"mx-4\">{props.heading}</h1>\r\n      <div className=\"accordion p-3\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={props.grey}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n\r\n            <div className=\"accordion-body\" style={props.mystyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={props.grey}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body \" style={props.mystyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/about\";\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mood, setmood] = useState(\"light\");\n  const [dt, setdt] = useState(\"dark\");\n  const [bwText, setbwText] = useState(\"black\");\n  const [btncolor, setbtncolor] = useState({\n    color: \"Red\",\n    backgroundColor: \"lightGrey\"\n    , border: \"1px solid lightGrey\"\n  }\n  )\n\n  const [mystyle, setMyStyle] = useState({\n    color: \"black\",\n    background: \"lightsteelblue\"\n\n  });\n\n  const [grey, setgrey] = useState({\n    color: \"black\",\n    backgroundColor: \"white\",\n  });\n  // const [alert, setalert] = useState(null);\n\n  // const showAlert = (message, type) => {\n  //   setalert({\n  //     msg:message,\n  //     typ:type\n  //   })\n  // };\n\n  const removeClasses = () => {\n    document.body.classList.remove(\"bg-primary\")\n    document.body.classList.remove(\"bg-warning\")\n    document.body.classList.remove(\"bg-danger\")\n  }\n\n  const darkMood = (cls) => {\n    removeClasses();\n    document.body.classList.add(\"bg-\" + cls)\n    if (mood === \"light\") {\n      setmood(\"dark\");\n      setdt(\"light\");\n      setbwText(\"white\");\n      document.body.style.backgroundColor = \"#444040\";\n      document.body.style.color = \"white\";\n      setbtncolor({\n        color: \"lightgrey\",\n        backgroundColor: \"#444040\"\n        , border: \"1px solid #444040\"\n\n      })\n      setMyStyle({\n        color: \"white\",\n        background:\n          \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(66,82,101,1) 100%, rgba(157,201,194,1) 100%, rgba(0,212,255,1) 100%)\",\n      });\n      setgrey({\n        color: \"white\",\n        backgroundColor: \"grey\",\n      });\n    }\n\n    // showAlert(\"Dark mode has been Enable, Succes\")\n    else {\n      setmood(\"light\");\n      setdt(\"dark\");\n      setbwText(\"black\");\n      document.body.style.backgroundColor = \"#d4d4d4\";\n      document.body.style.color = \"black\";\n      setbtncolor({\n        color: \"red\",\n        backgroundColor: \"lightGrey\"\n        , border: \"1px solid Lightgrey\"\n\n      })\n      setMyStyle({\n        color: \"black\",\n        background: \"lightsteelblue\"\n\n      });\n      setgrey({\n        color: \"black\",\n        backgroundColor: \"white\",\n      });\n\n      // showAlert(\"Light mod has been Enable, Succes\")\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          mood={mood}\n          darkMood={darkMood}\n          dt={dt}\n          btncolor={btncolor}\n          bwText={bwText}\n        />\n        <div className=\"container my-5\">\n\n          <Routes>\n            <Route exact path=\"/about\" element={<About heading=\"About\" mystyle={mystyle} grey={grey} />} />\n            <Route exact path=\"/\" element={<TextForm\n              heading=\"Enter the text to analyze\"\n              heading2=\"Your Text2 Summary\"\n              heading3=\"Preview\"\n            />} />\n          </Routes>\n\n        </div>\n\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n   "],"sourceRoot":""}